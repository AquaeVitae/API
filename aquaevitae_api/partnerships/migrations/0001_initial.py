# Generated by Django 4.2.7 on 2023-11-30 17:12

import aquaevitae_api.aquaevitae_api.models.base
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("companies", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CompanyRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("agent_fullname", models.CharField(max_length=30)),
                ("agent_role", models.CharField(max_length=30, null=True)),
                ("agent_email", models.EmailField(max_length=100, unique=True)),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, null=True, region=None, unique=True
                    ),
                ),
                ("country", models.CharField(max_length=30, unique=True)),
                ("approved_date", models.DateTimeField(blank=True, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("A", "Approved"), ("W", "Waiting"), ("D", "Denied")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Partnership",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[("O", "Open"), ("C", "Closed")], max_length=1
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("closed_date", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="companies.company",
                    ),
                ),
                (
                    "company_request",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="partnerships.companyrequest",
                    ),
                ),
            ],
            options={
                "db_table": "partnership",
            },
        ),
        migrations.CreateModel(
            name="ProductRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("approved_date", models.DateTimeField(blank=True, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("A", "Approved"), ("W", "Waiting"), ("D", "Denied")],
                        max_length=1,
                    ),
                ),
                ("name", models.CharField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("B", "Body"),
                            ("F", "Facial"),
                            ("H", "Hair"),
                            ("P", "Perfume"),
                            ("C", "Childrens"),
                            ("S", "Suns"),
                            ("M", "Makeup"),
                            ("O", "Other"),
                        ],
                        max_length=1,
                    ),
                ),
                ("size", models.FloatField()),
                (
                    "size_type",
                    models.CharField(
                        choices=[("Ml", "Milimiter"), ("Gr", "Grams")], max_length=2
                    ),
                ),
                ("characteristics", models.TextField()),
                ("recommended_use", models.TextField()),
                ("contraindications", models.TextField()),
                (
                    "skin_types",
                    aquaevitae_api.base.SetField(
                        base_field=models.SmallIntegerField(
                            blank=True,
                            choices=[
                                (1, "Dry"),
                                (2, "Sensitive"),
                                (3, "Sensible"),
                                (4, "Extra Dry"),
                                (5, "Combined"),
                                (6, "Irritated"),
                                (7, "Normal"),
                                (8, "Normal Dry"),
                                (9, "Normal Combined"),
                                (10, "Atopic Tendency"),
                                (11, "Fragile Damaged"),
                                (12, "All"),
                            ],
                        ),
                        blank=True,
                        default=list,
                        null=True,
                        size=12,
                    ),
                ),
                (
                    "product_type",
                    aquaevitae_api.base.SetField(
                        base_field=models.SmallIntegerField(
                            blank=True,
                            choices=[
                                (1, "Soap"),
                                (2, "Syndet"),
                                (3, "Bath Gel"),
                                (4, "Bath cream"),
                                (5, "Shampoo"),
                                (6, "Oil"),
                                (7, "Lotion"),
                                (8, "Cream"),
                                (9, "Balm"),
                                (10, "Waters"),
                                (11, "Micellar Water"),
                                (12, "Water Essences"),
                                (13, "Face Mist"),
                                (14, "Mask"),
                                (15, "SÃ©rum"),
                                (16, "Others"),
                            ],
                        ),
                        blank=True,
                        default=list,
                        null=True,
                        size=16,
                    ),
                ),
                (
                    "partnership",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="products",
                        to="partnerships.partnership",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
